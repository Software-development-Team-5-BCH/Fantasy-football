[{"C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Table\\Table.js":"1","C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Player\\Player.js":"2","C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Table\\tableRender.js":"3","C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\App.js":"4"},{"size":2406,"mtime":1608105893507,"results":"5","hashOfConfig":"6"},{"size":3346,"mtime":1608105721652,"results":"7","hashOfConfig":"6"},{"size":1009,"mtime":1608105926727,"results":"8","hashOfConfig":"6"},{"size":1480,"mtime":1608106960809,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dil9ez",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Table\\Table.js",[],"C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Player\\Player.js",["19","20"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Player.css\";\r\nimport Favourite from \"../Favourite/favourite\";\r\nimport MyClubs from \"../Club/Club\"\r\nimport { firebase } from '../../firebase'\r\nimport MyTeam from '../MyTeam/MyTeam'\r\nconst API =\r\n  \"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com/api/bootstrap-static/\";\r\nconst params = {\r\n  _limit: 1,\r\n};\r\n\r\n\r\nclass Player extends Component {\r\n  state = {\r\n    league: {\r\n      events: [],\r\n      elements: [],\r\n    },\r\n    listClub: false,\r\n    isLoading: false,\r\n    fname: \"\",\r\n    sname: \"\",\r\n    cost: \"\",\r\n    score: \"\",\r\n    form: \"\",\r\n    points: \"\",\r\n    image: \"\",\r\n    user: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLaoding: true });\r\n    axios\r\n      .get(API, { params })\r\n      .then((response) =>\r\n        this.setState({ league: response.data, isLoading: false })\r\n      );\r\n  }\r\n\r\n  addHandler(id) {\r\n    const favlist = this.state.league.elements.find(\r\n      (player) => player.id == id\r\n    );\r\n    this.setState({\r\n      fname: favlist.first_name,\r\n      sname: favlist.second_name,\r\n      score: favlist.goals_scored,\r\n      cost: favlist.now_cost,\r\n      form: favlist.form,\r\n      points: favlist.total_points,\r\n      image: favlist.photo,\r\n    });\r\n\r\n    this.addToUserTeam(favlist)\r\n  }\r\n\r\n  clubHandler() {\r\n    console.log('Hello');\r\n    this.setState({ listClub: true });\r\n  }\r\n\r\n  async addToUserTeam(favlist) {\r\n    const db = firebase.firestore();\r\n    let userId = firebase.auth().currentUser.uid\r\n    let userInfo = await db.collection('users').doc(userId).get()\r\n    if (!userInfo) return\r\n    let data = userInfo.data()\r\n    let updatedTeam = [...data.team, `${favlist.first_name} ${favlist.second_name} ${favlist.total_points}`]\r\n    let newData = { team: updatedTeam }\r\n    await db.collection('users').doc(userId).set(newData)\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.isLoading) {\r\n      return <p>Loading.....</p>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Favourite\r\n          fname={this.state.fname}\r\n          sname={this.state.sname}\r\n          score={this.state.score}\r\n          cost={this.state.cost}\r\n          form={this.state.form}\r\n          points={this.state.points}\r\n          image={this.state.image}\r\n        />\r\n\r\n        <button className=\"myclub-Btn\" onClick={() => this.clubHandler()}>Search by Club</button>\r\n        {this.state.listClub && < MyClubs include={this.addHandler} />}\r\n        <div>\r\n          <h2>Player list</h2>\r\n          <ul className=\"playerslist\">\r\n            {this.state.league.elements.map((items) => (\r\n              <li className=\"player\" key={items.id}>\r\n                <h2>{items.first_name}</h2>\r\n                <p>{items.second_name}</p>\r\n                <p>{items.form}</p>\r\n                <p>{items.now_cost}</p>\r\n                <p>{items.goals_scored}</p>\r\n                <p>{items.total_points}</p>\r\n                <p>{items.creativity}</p>\r\n                <img src={items.photo} />\r\n                <div className=\"add\" onClick={() => this.addHandler(items.id)}>\r\n                  +{\" \"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {this.props.user && <MyTeam user={{ ...this.props.user }} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n\r\n\r\n","C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\Component\\Table\\tableRender.js",[],"C:\\Users\\Aaron Ojala\\Desktop\\Fantasy-football\\src\\App.js",[],{"ruleId":"21","severity":1,"message":"22","line":44,"column":29,"nodeType":"23","messageId":"24","endLine":44,"endColumn":31},{"ruleId":"25","severity":1,"message":"26","line":106,"column":17,"nodeType":"27","endLine":106,"endColumn":42},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]